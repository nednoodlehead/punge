// so codes and modifiers are a mess to interact with. Modifiers cannot be displayed in widgets,
// but codes can, taking the value from a code is sucky. So we will redefine our own types here
// and also convert them here.
use global_hotkey::hotkey::{Code, Modifiers};

pub fn all_codes() -> Vec<String> {
    vec![
        String::from("Backquote"),
        String::from("Backslash"),
        String::from("BracketLeft"),
        String::from("BracketRight"),
        String::from("Comma"),
        String::from("Digit0"),
        String::from("Digit1"),
        String::from("Digit2"),
        String::from("Digit3"),
        String::from("Digit4"),
        String::from("Digit5"),
        String::from("Digit6"),
        String::from("Digit7"),
        String::from("Digit8"),
        String::from("Digit9"),
        String::from("Equal"),
        String::from("IntlBackslash"),
        String::from("IntlRo"),
        String::from("IntlYen"),
        String::from("A"),
        String::from("B"),
        String::from("C"),
        String::from("D"),
        String::from("E"),
        String::from("F"),
        String::from("G"),
        String::from("H"),
        String::from("I"),
        String::from("J"),
        String::from("K"),
        String::from("L"),
        String::from("M"),
        String::from("N"),
        String::from("O"),
        String::from("P"),
        String::from("Q"),
        String::from("R"),
        String::from("S"),
        String::from("T"),
        String::from("U"),
        String::from("V"),
        String::from("W"),
        String::from("X"),
        String::from("Y"),
        String::from("Z"),
        String::from("Minus"),
        String::from("Period"),
        String::from("Quote"),
        String::from("Semicolon"),
        String::from("Slash"),
        String::from("AltLeft"),
        String::from("AltRight"),
        String::from("Backspace"),
        String::from("CapsLock"),
        String::from("ContextMenu"),
        String::from("ControlLeft"),
        String::from("ControlRight"),
        String::from("Enter"),
        String::from("MetaLeft"),
        String::from("MetaRight"),
        String::from("ShiftLeft"),
        String::from("ShiftRight"),
        String::from("Space"),
        String::from("Tab"),
        String::from("Convert"),
        String::from("KanaMode"),
        String::from("Lang1"),
        String::from("Lang2"),
        String::from("Lang3"),
        String::from("Lang4"),
        String::from("Lang5"),
        String::from("NonConvert"),
        String::from("Delete"),
        String::from("End"),
        String::from("Help"),
        String::from("Home"),
        String::from("Insert"),
        String::from("PageDown"),
        String::from("PageUp"),
        String::from("ArrowDown"),
        String::from("ArrowLeft"),
        String::from("ArrowRight"),
        String::from("ArrowUp"),
        String::from("NumLock"),
        String::from("Numpad0"),
        String::from("Numpad1"),
        String::from("Numpad2"),
        String::from("Numpad3"),
        String::from("Numpad4"),
        String::from("Numpad5"),
        String::from("Numpad6"),
        String::from("Numpad7"),
        String::from("Numpad8"),
        String::from("Numpad9"),
        String::from("NumpadAdd"),
        String::from("NumpadBackspace"),
        String::from("NumpadClear"),
        String::from("NumpadClearEntry"),
        String::from("NumpadComma"),
        String::from("NumpadDecimal"),
        String::from("NumpadDivide"),
        String::from("NumpadEnter"),
        String::from("NumpadEqual"),
        String::from("NumpadHash"),
        String::from("NumpadMemoryAdd"),
        String::from("NumpadMemoryClear"),
        String::from("NumpadMemoryRecall"),
        String::from("NumpadMemoryStore"),
        String::from("NumpadMemorySubtract"),
        String::from("NumpadMultiply"),
        String::from("NumpadParenLeft"),
        String::from("NumpadParenRight"),
        String::from("NumpadStar"),
        String::from("NumpadSubtract"),
        String::from("Escape"),
        String::from("Fn"),
        String::from("FnLock"),
        String::from("PrintScreen"),
        String::from("ScrollLock"),
        String::from("Pause"),
        String::from("BrowserBack"),
        String::from("BrowserFavorites"),
        String::from("BrowserForward"),
        String::from("BrowserHome"),
        String::from("BrowserRefresh"),
        String::from("BrowserSearch"),
        String::from("BrowserStop"),
        String::from("Eject"),
        String::from("LaunchApp1"),
        String::from("LaunchApp2"),
        String::from("LaunchMail"),
        String::from("MediaPlayPause"),
        String::from("MediaSelect"),
        String::from("MediaStop"),
        String::from("MediaTrackNext"),
        String::from("MediaTrackPrevious"),
        String::from("Power"),
        String::from("Sleep"),
        String::from("AudioVolumeDown"),
        String::from("AudioVolumeMute"),
        String::from("AudioVolumeUp"),
        String::from("WakeUp"),
        String::from("Hyper"),
        String::from("Super"),
        String::from("Turbo"),
        String::from("Abort"),
        String::from("Resume"),
        String::from("Suspend"),
        String::from("Again"),
        String::from("Copy"),
        String::from("Cut"),
        String::from("Find"),
        String::from("Open"),
        String::from("Paste"),
        String::from("Props"),
        String::from("Select"),
        String::from("Undo"),
        String::from("Hiragana"),
        String::from("Katakana"),
        String::from("Unidentified"),
        String::from("F1"),
        String::from("F2"),
        String::from("F3"),
        String::from("F4"),
        String::from("F5"),
        String::from("F6"),
        String::from("F7"),
        String::from("F8"),
        String::from("F9"),
        String::from("F10"),
        String::from("F11"),
        String::from("F12"),
        String::from("F13"),
        String::from("F14"),
        String::from("F15"),
        String::from("F16"),
        String::from("F17"),
        String::from("F18"),
        String::from("F19"),
        String::from("F20"),
        String::from("F21"),
        String::from("F22"),
        String::from("F23"),
        String::from("F24"),
        String::from("F25"),
        String::from("F26"),
        String::from("F27"),
        String::from("F28"),
        String::from("F29"),
        String::from("F30"),
        String::from("F31"),
        String::from("F32"),
        String::from("F33"),
        String::from("F34"),
        String::from("F35"),
        String::from("BrightnessDown"),
        String::from("BrightnessUp"),
        String::from("DisplayToggleIntExt"),
        String::from("BoardLayoutSelect"),
        String::from("LaunchAssistant"),
        String::from("LaunchControlPanel"),
        String::from("LaunchScreenSaver"),
        String::from("MailForward"),
        String::from("MailReply"),
        String::from("MailSend"),
        String::from("MediaFastForward"),
        String::from("MediaPause"),
        String::from("MediaPlay"),
        String::from("MediaRecord"),
        String::from("MediaRewind"),
        String::from("MicrophoneMuteToggle"),
        String::from("PrivacyScreenToggle"),
        String::from("SelectTask"),
        String::from("ShowAllWindows"),
        String::from("ZoomToggle"),
    ]
}

pub fn string_to_code(code_str: String) -> Code {
    let matched = code_str.as_str();
    match matched {
        "Backquote" => Code::Backquote,
        "Backslash" => Code::Backslash,
        "BracketLeft" => Code::BracketLeft,
        "BracketRight" => Code::BracketRight,
        "Comma" => Code::Comma,
        "Digit0" => Code::Digit0,
        "Digit1" => Code::Digit1,
        "Digit2" => Code::Digit2,
        "Digit3" => Code::Digit3,
        "Digit4" => Code::Digit4,
        "Digit5" => Code::Digit5,
        "Digit6" => Code::Digit6,
        "Digit7" => Code::Digit7,
        "Digit8" => Code::Digit8,
        "Digit9" => Code::Digit9,
        "Equal" => Code::Equal,
        "IntlBackslash" => Code::IntlBackslash,
        "IntlRo" => Code::IntlRo,
        "IntlYen" => Code::IntlYen,
        "A" => Code::KeyA,
        "B" => Code::KeyB,
        "C" => Code::KeyC,
        "D" => Code::KeyD,
        "E" => Code::KeyE,
        "F" => Code::KeyF,
        "G" => Code::KeyG,
        "H" => Code::KeyH,
        "I" => Code::KeyI,
        "J" => Code::KeyJ,
        "K" => Code::KeyK,
        "L" => Code::KeyL,
        "M" => Code::KeyM,
        "N" => Code::KeyN,
        "O" => Code::KeyO,
        "P" => Code::KeyP,
        "Q" => Code::KeyQ,
        "R" => Code::KeyR,
        "S" => Code::KeyS,
        "T" => Code::KeyT,
        "U" => Code::KeyU,
        "V" => Code::KeyV,
        "W" => Code::KeyW,
        "X" => Code::KeyX,
        "Y" => Code::KeyY,
        "Z" => Code::KeyZ,
        "Minus" => Code::Minus,
        "Period" => Code::Period,
        "Quote" => Code::Quote,
        "Semicolon" => Code::Semicolon,
        "Slash" => Code::Slash,
        "AltLeft" => Code::AltLeft,
        "AltRight" => Code::AltRight,
        "Backspace" => Code::Backspace,
        "CapsLock" => Code::CapsLock,
        "ContextMenu" => Code::ContextMenu,
        "ControlLeft" => Code::ControlLeft,
        "ControlRight" => Code::ControlRight,
        "Enter" => Code::Enter,
        "MetaLeft" => Code::MetaLeft,
        "MetaRight" => Code::MetaRight,
        "ShiftLeft" => Code::ShiftLeft,
        "ShiftRight" => Code::ShiftRight,
        "Space" => Code::Space,
        "Tab" => Code::Tab,
        "Convert" => Code::Convert,
        "KanaMode" => Code::KanaMode,
        "Lang1" => Code::Lang1,
        "Lang2" => Code::Lang2,
        "Lang3" => Code::Lang3,
        "Lang4" => Code::Lang4,
        "Lang5" => Code::Lang5,
        "NonConvert" => Code::NonConvert,
        "Delete" => Code::Delete,
        "End" => Code::End,
        "Help" => Code::Help,
        "Home" => Code::Home,
        "Insert" => Code::Insert,
        "PageDown" => Code::PageDown,
        "PageUp" => Code::PageUp,
        "ArrowDown" => Code::ArrowDown,
        "ArrowLeft" => Code::ArrowLeft,
        "ArrowRight" => Code::ArrowRight,
        "ArrowUp" => Code::ArrowUp,
        "NumLock" => Code::NumLock,
        "Numpad0" => Code::Numpad0,
        "Numpad1" => Code::Numpad1,
        "Numpad2" => Code::Numpad2,
        "Numpad3" => Code::Numpad3,
        "Numpad4" => Code::Numpad4,
        "Numpad5" => Code::Numpad5,
        "Numpad6" => Code::Numpad6,
        "Numpad7" => Code::Numpad7,
        "Numpad8" => Code::Numpad8,
        "Numpad9" => Code::Numpad9,
        "NumpadAdd" => Code::NumpadAdd,
        "NumpadBackspace" => Code::NumpadBackspace,
        "NumpadClear" => Code::NumpadClear,
        "NumpadClearEntry" => Code::NumpadClearEntry,
        "NumpadComma" => Code::NumpadComma,
        "NumpadDecimal" => Code::NumpadDecimal,
        "NumpadDivide" => Code::NumpadDivide,
        "NumpadEnter" => Code::NumpadEnter,
        "NumpadEqual" => Code::NumpadEqual,
        "NumpadHash" => Code::NumpadHash,
        "NumpadMemoryAdd" => Code::NumpadMemoryAdd,
        "NumpadMemoryClear" => Code::NumpadMemoryClear,
        "NumpadMemoryRecall" => Code::NumpadMemoryRecall,
        "NumpadMemoryStore" => Code::NumpadMemoryStore,
        "NumpadMemorySubtract" => Code::NumpadMemorySubtract,
        "NumpadMultiply" => Code::NumpadMultiply,
        "NumpadParenLeft" => Code::NumpadParenLeft,
        "NumpadParenRight" => Code::NumpadParenRight,
        "NumpadStar" => Code::NumpadStar,
        "NumpadSubtract" => Code::NumpadSubtract,
        "Escape" => Code::Escape,
        "Fn" => Code::Fn,
        "FnLock" => Code::FnLock,
        "PrintScreen" => Code::PrintScreen,
        "ScrollLock" => Code::ScrollLock,
        "Pause" => Code::Pause,
        "BrowserBack" => Code::BrowserBack,
        "BrowserFavorites" => Code::BrowserFavorites,
        "BrowserForward" => Code::BrowserForward,
        "BrowserHome" => Code::BrowserHome,
        "BrowserRefresh" => Code::BrowserRefresh,
        "BrowserSearch" => Code::BrowserSearch,
        "BrowserStop" => Code::BrowserStop,
        "Eject" => Code::Eject,
        "LaunchApp1" => Code::LaunchApp1,
        "LaunchApp2" => Code::LaunchApp2,
        "LaunchMail" => Code::LaunchMail,
        "MediaPlayPause" => Code::MediaPlayPause,
        "MediaSelect" => Code::MediaSelect,
        "MediaStop" => Code::MediaStop,
        "MediaTrackNext" => Code::MediaTrackNext,
        "MediaTrackPrevious" => Code::MediaTrackPrevious,
        "Power" => Code::Power,
        "Sleep" => Code::Sleep,
        "AudioVolumeDown" => Code::AudioVolumeDown,
        "AudioVolumeMute" => Code::AudioVolumeMute,
        "AudioVolumeUp" => Code::AudioVolumeUp,
        "WakeUp" => Code::WakeUp,
        "Hyper" => Code::Hyper,
        "Super" => Code::Super,
        "Turbo" => Code::Turbo,
        "Abort" => Code::Abort,
        "Resume" => Code::Resume,
        "Suspend" => Code::Suspend,
        "Again" => Code::Again,
        "Copy" => Code::Copy,
        "Cut" => Code::Cut,
        "Find" => Code::Find,
        "Open" => Code::Open,
        "Paste" => Code::Paste,
        "Props" => Code::Props,
        "Select" => Code::Select,
        "Undo" => Code::Undo,
        "Hiragana" => Code::Hiragana,
        "Katakana" => Code::Katakana,
        "Unidentified" => Code::Unidentified,
        "F1" => Code::F1,
        "F2" => Code::F2,
        "F3" => Code::F3,
        "F4" => Code::F4,
        "F5" => Code::F5,
        "F6" => Code::F6,
        "F7" => Code::F7,
        "F8" => Code::F8,
        "F9" => Code::F9,
        "F10" => Code::F10,
        "F11" => Code::F11,
        "F12" => Code::F12,
        "F13" => Code::F13,
        "F14" => Code::F14,
        "F15" => Code::F15,
        "F16" => Code::F16,
        "F17" => Code::F17,
        "F18" => Code::F18,
        "F19" => Code::F19,
        "F20" => Code::F20,
        "F21" => Code::F21,
        "F22" => Code::F22,
        "F23" => Code::F23,
        "F24" => Code::F24,
        "F25" => Code::F25,
        "F26" => Code::F26,
        "F27" => Code::F27,
        "F28" => Code::F28,
        "F29" => Code::F29,
        "F30" => Code::F30,
        "F31" => Code::F31,
        "F32" => Code::F32,
        "F33" => Code::F33,
        "F34" => Code::F34,
        "F35" => Code::F35,
        "BrightnessDown" => Code::BrightnessDown,
        "BrightnessUp" => Code::BrightnessUp,
        "DisplayToggleIntExt" => Code::DisplayToggleIntExt,
        "KeyboardLayoutSelect" => Code::KeyboardLayoutSelect,
        "LaunchAssistant" => Code::LaunchAssistant,
        "LaunchControlPanel" => Code::LaunchControlPanel,
        "LaunchScreenSaver" => Code::LaunchScreenSaver,
        "MailForward" => Code::MailForward,
        "MailReply" => Code::MailReply,
        "MailSend" => Code::MailSend,
        "MediaFastForward" => Code::MediaFastForward,
        "MediaPause" => Code::MediaPause,
        "MediaPlay" => Code::MediaPlay,
        "MediaRecord" => Code::MediaRecord,
        "MediaRewind" => Code::MediaRewind,
        "MicrophoneMuteToggle" => Code::MicrophoneMuteToggle,
        "PrivacyScreenToggle" => Code::PrivacyScreenToggle,
        "SelectTask" => Code::SelectTask,
        "ShowAllWindows" => Code::ShowAllWindows,
        "ZoomToggle" => Code::ZoomToggle,
        _ => Code::KeyA, // whatever idc cant be hit
    }
}

pub fn get_all_modifiers() -> Vec<String> {
    vec![
        String::from(""),
        String::from("SHIFT"),
        String::from("CONTROL"),
        String::from("SUPER"),
        String::from("ALT"),
    ]
}

pub fn string_to_modifiers(mod_str: String) -> Modifiers {
    let mt = mod_str.as_str();
    match mt {
        "SHIFT" => Modifiers::SHIFT,
        "CONTROL" => Modifiers::CONTROL,
        "SUPER" => Modifiers::SUPER,
        "ALT" => Modifiers::ALT,
        _ => Modifiers::SHIFT,
    }
}

pub fn mod_to_string(modif: Modifiers) -> String {
    match modif {
        Modifiers::SHIFT => "SHIFT".to_string(),
        Modifiers::CONTROL => "CONTROL".to_string(),
        Modifiers::SUPER => "SUPER".to_string(),
        Modifiers::ALT => "ALT".to_string(),
        _ => "error, how did you do this?".to_string(),
    }
}
